{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/gimhojin/Desktop/reactnative/spartaNative/navigations/StackNavigator.jsx\";\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignInPage from \"../pages/SignInPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport DetailPage from \"../pages/DetailPage\";\nimport TabNavigator from \"./TabNavigator\";\nvar Stack = createStackNavigator();\n\nvar StackNavigator = function StackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: 'black',\n        borderBottomColor: 'black',\n        shadowColor: 'black',\n        height: 100\n      },\n      headerTintColor: '#FFFFFF',\n      headerBackTitleVisible: false,\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"TabNavigator\",\n    component: TabNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignInPage\",\n    component: SignInPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUpPage\",\n    component: SignUpPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"DetailPage\",\n    component: DetailPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default StackNavigator;","map":{"version":3,"sources":["/Users/gimhojin/Desktop/reactnative/spartaNative/navigations/StackNavigator.jsx"],"names":["React","createStackNavigator","SignInPage","SignUpPage","DetailPage","TabNavigator","Stack","StackNavigator","headerStyle","backgroundColor","borderBottomColor","shadowColor","height","headerTintColor","headerBackTitleVisible","headerShown"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AAGA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,OAAOC,YAAP;AAIA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AAEA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,SAII,oBAAC,KAAD,CAAO,SAAP;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,WAAW,EAAE;AACTC,QAAAA,eAAe,EAAE,OADR;AAETC,QAAAA,iBAAiB,EAAE,OAFV;AAGTC,QAAAA,WAAW,EAAE,OAHJ;AAITC,QAAAA,MAAM,EAAE;AAJC,OADF;AAOXC,MAAAA,eAAe,EAAE,SAPN;AAQXC,MAAAA,sBAAsB,EAAE,KARb;AASXC,MAAAA,WAAW,EAAE;AATF,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEV,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EAmBI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEH,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EAoBI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,EAqBI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CAJJ;AA4BH,CA7BD;;AA+BA,eAAeG,cAAf","sourcesContent":["import React from 'react';\n//설치한 스택 네비게이션 라이브러리를 가져옵니다\nimport { createStackNavigator } from '@react-navigation/stack';\n\n//페이지로 만든 컴포넌트들을 불러옵니다\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport DetailPage from '../pages/DetailPage';\n\nimport TabNavigator from './TabNavigator';\n\n//스택 네비게이션 라이브러리가 제공해주는 여러 기능이 담겨있는 객체를 사용합니다\n//그래서 이렇게 항상 상단에 선언하고 시작하는게 규칙입니다!\nconst Stack = createStackNavigator();\n\nconst StackNavigator = () => {\n    return (\n        //컴포넌트들을 페이지처럼 여기게끔 해주는 기능을 하는 네비게이터 태그를 선언합니다.\n        //위에서 선언한 const Stack = createStackNavigator(); Stack 변수에 들어있는 태그를 꺼내 사용합니다.\n        //Stack.Navigator 태그 내부엔 페이지(화면)를 스타일링 할 수 있는 다양한 옵션들이 담겨 있습니다.\n        <Stack.Navigator\n            screenOptions={{\n                headerStyle: {\n                    backgroundColor: 'black',\n                    borderBottomColor: 'black',\n                    shadowColor: 'black',\n                    height: 100,\n                },\n                headerTintColor: '#FFFFFF',\n                headerBackTitleVisible: false,\n                headerShown: false,\n            }}\n        >\n            {/* 컴포넌트를 페이지로 만들어주는 엘리먼트에 끼워 넣습니다. 이 자체로 이제 페이지 기능을 합니다. \\\n            \\\n            \\\n            이거 순서대로 나온다!!!!*/}\n\n            <Stack.Screen name=\"TabNavigator\" component={TabNavigator} />\n            <Stack.Screen name=\"SignInPage\" component={SignInPage} />\n            <Stack.Screen name=\"SignUpPage\" component={SignUpPage} />\n            <Stack.Screen name=\"DetailPage\" component={DetailPage} />\n        </Stack.Navigator>\n    );\n};\n\nexport default StackNavigator;\n\n"]},"metadata":{},"sourceType":"module"}