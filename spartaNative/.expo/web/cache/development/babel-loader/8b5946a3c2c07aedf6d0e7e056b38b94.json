{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/gimhojin/Desktop/reactnative/spartaNative/node_modules/react-native-image-blur-loading/src/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styles from \"./style\";\n\nfunction ImageBlurLoading(_ref) {\n  var onLoad = _ref.onLoad,\n      _ref$withIndicator = _ref.withIndicator,\n      withIndicator = _ref$withIndicator === void 0 ? true : _ref$withIndicator,\n      thumbnailSource = _ref.thumbnailSource,\n      source = _ref.source,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"onLoad\", \"withIndicator\", \"thumbnailSource\", \"source\", \"style\"]);\n\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 1),\n      imgAnim = _useState2[0];\n\n  var _useState3 = useState(new Animated.Value(0)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      thumbnailAnim = _useState4[0];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      helper = _useState8[0],\n      setHelper = _useState8[1];\n\n  useEffect(function () {\n    thumbnailSource && setHelper(true);\n    setTimeout(function () {\n      return setLoading(false);\n    }, 20000);\n  }, []);\n\n  var handleThumbnailLoad = function handleThumbnailLoad() {\n    setLoading(false);\n    Animated.timing(thumbnailAnim, {\n      toValue: 1,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var onImageLoad = function onImageLoad() {\n    setLoading(false);\n    helper && setHelper(false);\n    Animated.timing(imgAnim, {\n      toValue: 1,\n      useNativeDriver: false\n    }).start();\n    onLoad && onLoad();\n  };\n\n  var styleBorder = {\n    borderBottomLeftRadius: style.borderBottomLeftRadius,\n    borderBottomRightRadius: style.borderBottomRightRadius,\n    borderColor: style.borderColor,\n    borderWidth: style.borderWidth,\n    borderRadius: style.borderRadius,\n    borderTopLeftRadius: style.borderTopLeftRadius,\n    borderTopRightRadius: style.borderTopRightRadius\n  };\n  var sizeLoading = {\n    width: style.width,\n    height: style.height\n  };\n\n  if (style.length) {\n    for (var i = 0; i < style.length; i++) {\n      if (style[i].width != undefined) sizeLoading.width = style[i].width;\n      if (style[i].height != undefined) sizeLoading.height = style[i].height;\n      if (style[i].borderBottomLeftRadius != undefined) styleBorder.borderBottomLeftRadius = style[i].borderBottomLeftRadius;\n      if (style[i].borderBottomRightRadius != undefined) styleBorder.borderBottomRightRadius = style[i].borderBottomRightRadius;\n      if (style[i].borderColor != undefined) styleBorder.borderColor = style[i].borderColor;\n      if (style[i].borderWidth != undefined) styleBorder.borderWidth = style[i].borderWidth;\n      if (style[i].borderRadius != undefined) styleBorder.borderRadius = style[i].borderRadius;\n      if (style[i].borderTopLeftRadius != undefined) styleBorder.borderTopLeftRadius = style[i].borderTopLeftRadius;\n      if (style[i].borderTopRightRadius != undefined) styleBorder.borderTopRightRadius = style[i].borderTopRightRadius;\n    }\n  }\n\n  return React.createElement(React.Fragment, null, thumbnailSource && helper && React.createElement(Animated.Image, _extends({}, props, {\n    source: thumbnailSource,\n    style: [style, {\n      opacity: thumbnailAnim\n    }, _objectSpread({}, StyleSheet.absoluteFillObject)],\n    onLoad: handleThumbnailLoad,\n    blurRadius: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), React.createElement(Animated.Image, _extends({}, props, {\n    source: source,\n    style: [style, {\n      opacity: imgAnim\n    }],\n    onLoad: onImageLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  })), withIndicator && loading && React.createElement(View, {\n    style: [styles.imageOverlay, styles.centerSection, styleBorder, sizeLoading],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, React.createElement(ActivityIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })));\n}\n\nexport default ImageBlurLoading;","map":{"version":3,"sources":["/Users/gimhojin/Desktop/reactnative/spartaNative/node_modules/react-native-image-blur-loading/src/index.tsx"],"names":["React","useEffect","useState","styles","ImageBlurLoading","onLoad","withIndicator","thumbnailSource","source","style","props","Animated","Value","imgAnim","thumbnailAnim","loading","setLoading","helper","setHelper","setTimeout","handleThumbnailLoad","timing","toValue","useNativeDriver","start","onImageLoad","styleBorder","borderBottomLeftRadius","borderBottomRightRadius","borderColor","borderWidth","borderRadius","borderTopLeftRadius","borderTopRightRadius","sizeLoading","width","height","length","i","undefined","opacity","StyleSheet","absoluteFillObject","imageOverlay","centerSection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Animated,\n  ActivityIndicator, \n  ImageSourcePropType, \n  AccessibilityProps,\n  StyleProp,\n  ImageStyle,\n  ImagePropsBase,\n  ImagePropsIOS,\n  ImagePropsAndroid, \n  StyleSheet\n} from 'react-native';\n\nimport styles from './style';\n\nexport interface ImageBlurLoadingProps extends ImagePropsBase, ImagePropsIOS, ImagePropsAndroid, AccessibilityProps {\n  onLoad?(): void\n  withIndicator?: boolean;\n  thumbnailSource?: ImageSourcePropType;\n  source: ImageSourcePropType;\n  style?: StyleProp<ImageStyle> & any;\n}\n\nfunction ImageBlurLoading(\n  { onLoad, withIndicator=true, thumbnailSource, source, style, ...props }: \n  ImageBlurLoadingProps\n) {\n  const [imgAnim] = useState<any>(new Animated.Value(0))\n  const [thumbnailAnim] = useState<any>(new Animated.Value(0))\n  const [loading, setLoading] = useState<boolean>(true)\n  \n  const [helper, setHelper] = useState<boolean>(false)\n\n  useEffect(() => {\n    thumbnailSource && setHelper(true)\n    setTimeout(() => setLoading(false), 20000) // fetch image timeout 20s\n  }, [])\n\n  const handleThumbnailLoad = () => {\n    setLoading(false)\n    Animated.timing(thumbnailAnim, {\n      toValue: 1,\n      useNativeDriver: false\n    }).start()\n  }\n  const onImageLoad = () => {\n    setLoading(false)\n    helper && setHelper(false)\n    Animated.timing(imgAnim, {\n      toValue: 1,\n      useNativeDriver: false\n    }).start()\n    onLoad && onLoad()\n  }\n\n  const styleBorder: {\n    borderBottomLeftRadius?: number;\n    borderBottomRightRadius?: number;\n    borderColor?: string;\n    borderWidth?: number;\n    borderRadius?: number;\n    borderTopLeftRadius?: number;\n    borderTopRightRadius?: number;\n  } = {\n    borderBottomLeftRadius: style.borderBottomLeftRadius,\n    borderBottomRightRadius: style.borderBottomRightRadius,\n    borderColor: style.borderColor,\n    borderWidth: style.borderWidth,\n    borderRadius: style.borderRadius,\n    borderTopLeftRadius: style.borderTopLeftRadius,\n    borderTopRightRadius: style.borderTopRightRadius,\n  }\n  const sizeLoading: any = {\n    width: style.width,\n    height: style.height,\n  }\n\n  if (style.length) { // \n    for (let i=0; i<style.length; i++) {\n      // find width & height for loading frame indicators\n      if (style[i].width!=undefined) sizeLoading.width = style[i].width\n      if (style[i].height!=undefined) sizeLoading.height = style[i].height\n      // find border radius for loading frame indicators\n      if (style[i].borderBottomLeftRadius!=undefined) styleBorder.borderBottomLeftRadius = style[i].borderBottomLeftRadius\n      if (style[i].borderBottomRightRadius!=undefined) styleBorder.borderBottomRightRadius = style[i].borderBottomRightRadius\n      if (style[i].borderColor!=undefined) styleBorder.borderColor = style[i].borderColor\n      if (style[i].borderWidth!=undefined) styleBorder.borderWidth = style[i].borderWidth\n      if (style[i].borderRadius!=undefined) styleBorder.borderRadius = style[i].borderRadius\n      if (style[i].borderTopLeftRadius!=undefined) styleBorder.borderTopLeftRadius = style[i].borderTopLeftRadius\n      if (style[i].borderTopRightRadius!=undefined) styleBorder.borderTopRightRadius = style[i].borderTopRightRadius\n    }\n  }\n  return (\n    <>\n      {\n        (thumbnailSource && helper) &&\n          <Animated.Image\n            { ...props }\n            source={thumbnailSource}\n            style={[ style, { opacity: thumbnailAnim }, { ...StyleSheet.absoluteFillObject } ]}\n            onLoad={ handleThumbnailLoad }\n            blurRadius={1}\n          />\n      }\n\n      <Animated.Image\n        { ...props }\n        source={ source }\n        style={[ style, { opacity: imgAnim } ]}\n        onLoad={ onImageLoad }\n      />\n\n      { \n        withIndicator &&\n          loading && \n            <View style={[ styles.imageOverlay, styles.centerSection, styleBorder, sizeLoading ]}>\n              <ActivityIndicator />\n            </View>\n      }\n    </>\n  )\n}\n\nexport default ImageBlurLoading;"]},"metadata":{},"sourceType":"module"}