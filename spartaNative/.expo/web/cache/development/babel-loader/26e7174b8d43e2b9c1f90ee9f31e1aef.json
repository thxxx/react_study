{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/gimhojin/Desktop/reactnative/spartaNative/pages/SignUpPage.jsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Content, Text, Form, Item, Input, Label, Button, Header, Left, Icon, Body, Right } from 'native-base';\n\nvar bImage = require(\"../assets/background.png\");\n\nimport ItemInput from \"../components/ItemInput\";\nimport { useState } from 'react';\nexport default function SignUpPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nickName = _useState2[0],\n      setNickName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordCheck = _useState8[0],\n      setCheck = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nickNameError = _useState10[0],\n      setNickNameError = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      emailError = _useState12[0],\n      setEmailError = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passwordError = _useState14[0],\n      setPasswordError = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      passwordCheckError = _useState16[0],\n      setCheckError = _useState16[1];\n\n  var doSignUp = function doSignUp() {\n    if (nickName == '') {\n      setNickNameError('닉네임을 입력하세요');\n    } else if (email == '') {\n      setEmailError('이메일을 입력하세요');\n    } else if (password == '') {\n      setPasswordError('이메일을 입력하세요');\n    } else if (passwordCheck == '') {\n      setCheckError('이메일 확인을 입력하세요');\n    }\n  };\n\n  return React.createElement(Container, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: bImage,\n    style: styles.backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    transparent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Left, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-back\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }))), React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), React.createElement(Right, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), React.createElement(Content, {\n    contentContainerStyle: styles.content,\n    scrollEnabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.highlite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"we\"), \"gram signup\"), React.createElement(Form, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(ItemInput, {\n    title: '닉네임',\n    type: 'nickName',\n    error: nickNameError,\n    setFunc: setNickName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(ItemInput, {\n    title: '이메일',\n    type: 'email',\n    error: emailError,\n    setFunc: setEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(ItemInput, {\n    title: '비밀번호',\n    type: 'password',\n    error: passwordError,\n    setFunc: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), React.createElement(ItemInput, {\n    title: '비밀번호 확인',\n    type: 'passwordCheck',\n    error: passwordCheckError,\n    setFunc: setCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    full: true,\n    style: styles.emailSignUp,\n    onPress: doSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"\\uB4F1\\uB85D\")))));\n}\nvar styles = StyleSheet.create({\n  container: {},\n  backgroundImage: {\n    width: '100%',\n    height: '100%'\n  },\n  content: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(52, 52, 52, 0.5)',\n    margin: 20,\n    borderRadius: 20\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: '700',\n    color: '#fff',\n    textAlign: 'center'\n  },\n  highlite: {\n    fontSize: 25,\n    fontWeight: '700',\n    color: 'deeppink',\n    textAlign: 'center'\n  },\n  form: {\n    width: 250,\n    borderRadius: 10,\n    paddingBottom: 20,\n    paddingRight: 20,\n    paddingLeft: 20,\n    marginTop: 10\n  },\n  snsSignUp: {\n    alignSelf: 'center',\n    width: 250,\n    marginTop: 10,\n    borderRadius: 10,\n    backgroundColor: '#4667A5'\n  },\n  emailSignUp: {\n    alignSelf: 'center',\n    width: 250,\n    marginTop: 5,\n    borderRadius: 10,\n    backgroundColor: '#333'\n  }\n});","map":{"version":3,"sources":["/Users/gimhojin/Desktop/reactnative/spartaNative/pages/SignUpPage.jsx"],"names":["React","Container","Content","Text","Form","Item","Input","Label","Button","Header","Left","Icon","Body","Right","bImage","require","ItemInput","useState","SignUpPage","navigation","nickName","setNickName","email","setEmail","password","setPassword","passwordCheck","setCheck","nickNameError","setNickNameError","emailError","setEmailError","passwordError","setPasswordError","passwordCheckError","setCheckError","doSignUp","styles","container","backgroundImage","goBack","color","content","title","highlite","form","emailSignUp","StyleSheet","create","width","height","flex","alignItems","justifyContent","backgroundColor","margin","borderRadius","fontSize","fontWeight","textAlign","paddingBottom","paddingRight","paddingLeft","marginTop","snsSignUp","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, ImageBackground } from 'react-native';\nimport {\n  Container,\n  Content,\n  Text,\n  Form,\n  Item,\n  Input,\n  Label,\n  Button,\n  Header,\n  Left,\n  Icon,\n  Body,\n  Right,\n} from 'native-base';\nconst bImage = require('../assets/background.png');\nimport ItemInput from '../components/ItemInput';\nimport { useState } from 'react';\n\n\n// transparent의 기능이 뭐지?\n//\n//\n//\n//\n\n\nexport default function SignUpPage({ navigation }) {\n  const [nickName, setNickName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setCheck] = useState('');\n\n\n  const [nickNameError, setNickNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordCheckError, setCheckError] = useState('');\n\n  const doSignUp = () => {\n    if (nickName == '') {\n      setNickNameError('닉네임을 입력하세요');\n    }\n    else if (email == '') {\n      setEmailError('이메일을 입력하세요');\n    }\n    else if (password == '') {\n      setPasswordError('이메일을 입력하세요');\n      \n    }\n    else if (passwordCheck == '') {\n      setCheckError('이메일 확인을 입력하세요');\n      \n    }\n  }\n\n\n\n  return (\n    <Container style={styles.container}>\n      <ImageBackground source={bImage} style={styles.backgroundImage}>\n        <Header transparent>\n          <Left>\n            <Button transparent\n              onPress={() => {\n                navigation.goBack();\n              }}>\n              <Icon name=\"arrow-back\" style={{ color: '#fff' }} />\n            </Button>\n          </Left>\n          <Body />\n          <Right />\n        </Header>\n        <Content contentContainerStyle={styles.content} scrollEnabled={false}>\n          <Text style={styles.title}>\n            <Text style={styles.highlite}>we</Text>gram signup\n          </Text>\n          <Form style={styles.form}>\n            <ItemInput title={'닉네임'} type={'nickName'} error={nickNameError} setFunc={setNickName}/>\n            <ItemInput title={'이메일'} type={'email'} error={emailError} setFunc={setEmail}/>\n            <ItemInput title={'비밀번호'} type={'password'} error={passwordError} setFunc={setPassword}/>\n            <ItemInput title={'비밀번호 확인'} type={'passwordCheck'} error={passwordCheckError} setFunc={setCheck}/>\n          </Form>\n          <Button full style={styles.emailSignUp} onPress={doSignUp}>\n            <Text>등록</Text>\n          </Button>\n        </Content>\n      </ImageBackground>\n    </Container>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  backgroundImage: {\n    width: '100%',\n    height: '100%',\n  },\n  content: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(52, 52, 52, 0.5)',\n    margin: 20,\n    borderRadius: 20,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: '700',\n    color: '#fff',\n    textAlign: 'center',\n  },\n  highlite: {\n    fontSize: 25,\n    fontWeight: '700',\n    color: 'deeppink',\n    textAlign: 'center',\n  },\n  form: {\n    width: 250,\n    borderRadius: 10,\n    paddingBottom: 20,\n    paddingRight: 20,\n    paddingLeft: 20,\n    marginTop: 10,\n  },\n\n  snsSignUp: {\n    alignSelf: 'center',\n    width: 250,\n    marginTop: 10,\n    borderRadius: 10,\n    backgroundColor: '#4667A5',\n  },\n  emailSignUp: {\n    alignSelf: 'center',\n    width: 250,\n    marginTop: 5,\n    borderRadius: 10,\n    backgroundColor: '#333',\n  },\n});"]},"metadata":{},"sourceType":"module"}